tosca_definitions_version: cloudify_dsl_1_3

description: >
  This Blueprint installs single node nodecellar application
  on Openstack

imports:
  - http://www.getcloudify.org/spec/cloudify/4.2/types.yaml
  - https://github.com/cloudify-cosmo/cloudify-openstack-plugin/releases/download/2.5.1/plugin.yaml
  - https://github.com/cloudify-incubator/cloudify-utilities-plugin/releases/download/1.4.5/plugin.yaml
  - types/nodecellar.yaml
  - types/openstack-types.yaml
  - imports/cloud-config.yaml


inputs:


  image:
    description: >
      An Openstack Image ID. Tested with a Ubuntu 14.04 image.
    default: { get_secret: ubuntu_trusty_image }

  flavor:
    description: >
      An Openstack Flavor ID.
    default: { get_secret: small_image_flavor }

  agent_user:
    description: The user name of the agent on the instance created from the image.
    default: ubuntu

  branch_rtr_deployment_name:
    description: >
      Branch deployment name
    default: "branch-1-rtr"

  branch_rtr_blueprint_name:
    description: >
      Branch blueprint name
    default: "branch-rtr-baseline"


dsl_definitions:

  openstack_config: &openstack_config
    username: { get_secret: keystone_username }
    password: { get_secret: keystone_password }
    tenant_name: { get_secret: keystone_tenant_name }
    auth_url: { get_secret: keystone_url }
    region: { get_secret: region }

node_templates:


  branch_vnf_deployment:
    type: cloudify.nodes.DeploymentProxy
    properties:
      resource_config:
        blueprint:
          id: { get_input: branch_rtr_blueprint_name }
          external_resource: true
        deployment:
          id: { get_input: branch_rtr_deployment_name }
          external_resource: true
          outputs:
            baseline_branch_lan_name: branch_lan_name


  nodecellar:
    type: nodecellar.nodes.NodecellarApplicationModule
    relationships:
      - type: node_connected_to_mongo
        target: mongod
      - type: node_contained_in_nodejs
        target: nodejs

  mongod:
    type: nodecellar.nodes.MongoDatabase
    relationships:
      - type: cloudify.relationships.contained_in
        target: host

  nodejs:
    type: nodecellar.nodes.NodeJSServer
    relationships:
      - type: cloudify.relationships.contained_in
        target: host

  host:
    type: nodecellar.nodes.NotMonitoredServer
    instances:
      deploy: 1
    properties:
      openstack_config: *openstack_config
    relationships:
      - target: mgmt_port
        type: cloudify.openstack.server_connected_to_port
      - target: host_port
        type: cloudify.openstack.server_connected_to_port
      - target: ip
        type: cloudify.relationships.depends_on


  host_port:
    type: cloudify.openstack.nodes.Port
    properties:
      openstack_config: *openstack_config
    relationships:
      - type: cloudify.relationships.contained_in
        target: private_network
      - type: cloudify.relationships.depends_on
        target: private_subnet
      - type: cloudify.openstack.port_connected_to_security_group
        target: security_group
      - type: cloudify.relationships.depends_on
        target: mgmt_port

  mgmt_port:
    type: cloudify.openstack.nodes.Port
    properties:
      openstack_config: *openstack_config
    relationships:
    - type: cloudify.relationships.contained_in
      target: mgmt_network
    - type: cloudify.relationships.depends_on
      target: mgmt_subnet
    - type: cloudify.openstack.port_connected_to_security_group
      target: security_group
    - type: cloudify.openstack.port_connected_to_floating_ip
      target: ip

  security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      openstack_config: *openstack_config
      security_group:
        description: generic security group
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: "TCP"
        - remote_ip_prefix: 0.0.0.0/0
          protocol: "UDP"
        - remote_ip_prefix: 0.0.0.0/0
          protocol: "ICMP"
          port_range_min: null
          port_range_max: null



  private_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { concat: [ get_attribute: [branch_vnf_deployment, deployment, outputs, branch_lan_name ] , "-protected" ] }
    relationships:
      - target: private_network
        type: cloudify.relationships.contained_in
      - target: branch_vnf_deployment
        type: cloudify.relationships.depends_on

  private_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { concat: [ get_attribute: [branch_vnf_deployment, deployment, outputs, branch_lan_name ] , "-protected" ] }
    relationships:
      - target: branch_vnf_deployment
        type: cloudify.relationships.depends_on

  mgmt_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: mgmt-subnet
    relationships:
    - target: mgmt_network
      type: cloudify.relationships.contained_in

  mgmt_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: mgmt

  ip:
      type: cloudify.openstack.nodes.FloatingIP
      properties:
        openstack_config: *openstack_config
        floatingip:
          floating_network_name: { get_secret: external_network_name }

outputs:
