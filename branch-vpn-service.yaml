tosca_definitions_version: cloudify_dsl_1_3

imports:
    - http://www.getcloudify.org/spec/cloudify/4.2/types.yaml
    - https://github.com/cloudify-cosmo/cloudify-openstack-plugin/releases/download/2.5.1/plugin.yaml
    - https://github.com/cloudify-incubator/cloudify-utilities-plugin/releases/download/1.4.5/plugin.yaml


inputs:

  user:
    description: >
      Username for 6WIND router
    default: "admin"

  password:
    description: >
      Password for 6WIND router
    default: "admin"

  branch_hostname:
    description: >
      Branch hostname
    default: ""

  hq_deployment_name:
    description: >
      HQ deployment name
    default: "hq"

  hq_blueprint_name:
    description: >
      HQ blueprint name
    default: "hq-baseline"

  branch_deployment_name:
    description: >
      Branch deployment name
    default: ""

  branch_blueprint_name:
    description: >
      Branch blueprint name
    default: ""





dsl_definitions:

  openstack_config: &openstack_config
    username: { get_secret: keystone_username }
    password: { get_secret: keystone_password }
    tenant_name: { get_secret: keystone_tenant_name }
    auth_url: { get_secret: keystone_url }
    region: { get_secret: region }


node_templates:

  hq_vnf_deployment:
    type: cloudify.nodes.DeploymentProxy
    properties:
      resource_config:
        blueprint:
          id: { get_input: hq_blueprint_name }
          external_resource: true
        deployment:
          id: { get_input: hq_deployment_name }
          external_resource: true
          outputs:
            baseline_hq_mgmt_ip: hq_mgmt_ip
            baseline_hq_wan_ip: hq_wan_ip
            baseline_hq_lan_net: hq_lan_net
            baseline_hq_username: hq_username
            baseline_hq_password: hq_password

  branch_vnf_deployment:
    type: cloudify.nodes.DeploymentProxy
    properties:
      resource_config:
        blueprint:
          id: { get_input: branch_blueprint_name }
          external_resource: true
        deployment:
          id: { get_input: branch_deployment_name }
          external_resource: true
          outputs:
            baseline_branch_mgmt_ip: branch_mgmt_ip
            baseline_branch_wan_ip: branch_wan_ip
            baseline_branch_lan_net: branch_lan_net
            baseline_branch_username: branch_username
            baseline_branch_password: branch_password

  hq_vnf_vpn_service:
    type: cloudify.terminal.raw
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            terminal_auth: &terminal_auth_hq
              user: { get_input: user }
              password: { get_input: password }
              ip: { get_attribute: [hq_vnf_deployment, deployment, outputs, hq_mgmt_ip ] }
              exit_command: "logout"
              promt_check:
                - '}'
              errors:
                - "String error"
            calls:
              - action: "logout"
        start:
          inputs:
            terminal_auth: *terminal_auth_hq
            calls:
              - template: templates/hq-vpn-start.txt
                params:
                  BRANCH_HOSTNAME: { get_input: branch_hostname }
                  BRANCH_WAN_IP: { get_attribute: [branch_vnf_deployment, deployment, outputs, branch_wan_ip, 0] }
                  BRANCH_LAN_NET: { get_attribute: [branch_vnf_deployment, deployment, outputs, branch_lan_net ] }
                  HQ_WAN_IP: { get_attribute: [hq_vnf_deployment, deployment, outputs, hq_wan_ip, 0] }
                  HQ_LAN_NET: { get_attribute: [hq_vnf_deployment, deployment, outputs, hq_lan_net ] }
        stop:
          inputs:
            terminal_auth: *terminal_auth_hq
            calls:
              - template: templates/hq-vpn-stop.txt
                params:
                  BRANCH_HOSTNAME: { get_input: branch_hostname }
    relationships:
      - type: cloudify.relationships.depends_on
        target: hq_vnf_deployment

  branch_vnf_vpn_service:
    type: cloudify.terminal.raw
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            terminal_auth: &terminal_auth_branch
              user: {get_input: user}
              password: {get_input: password}
              ip: { get_attribute: [branch_vnf_deployment, deployment, outputs, branch_mgmt_ip ] }
              exit_command: "logout"
              promt_check:
                - "}"
              errors:
                - "String error"
            calls:
              - action: "logout"
        start:
          inputs:
            terminal_auth: *terminal_auth_branch
            calls:
              - template: templates/branch-vpn-start.txt
                params:
                  BRANCH_WAN_IP: { get_attribute: [branch_vnf_deployment, deployment, outputs, branch_wan_ip, 0] }
                  BRANCH_LAN_NET: { get_attribute: [branch_vnf_deployment, deployment, outputs, branch_lan_net ] }
                  HQ_WAN_IP: { get_attribute: [hq_vnf_deployment, deployment, outputs, hq_wan_ip, 0] }
                  HQ_LAN_NET: { get_attribute: [hq_vnf_deployment, deployment, outputs, hq_lan_net ] }
        stop:
          inputs:
            terminal_auth: *terminal_auth_branch
            calls:
              - template: templates/branch-vpn-stop.txt
    relationships:
    - type: cloudify.relationships.depends_on
      target: branch_vnf_deployment




outputs:
